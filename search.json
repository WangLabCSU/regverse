[{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://wanglabcsu.github.io/regverse/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [2024] [regverse authors]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://wanglabcsu.github.io/regverse/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shixiang Wang. Author, maintainer.","code":""},{"path":"https://wanglabcsu.github.io/regverse/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang S (2025). regverse: Streamlined Data Modeling Visualization Biomedical Regression Analysis. R package version 0.0.0.9000, https://wanglabcsu.github.io/regverse/, https://github.com/WangLabCSU/regverse.","code":"@Manual{,   title = {regverse: Streamlined Data Modeling and Visualization in Biomedical Regression Analysis},   author = {Shixiang Wang},   year = {2025},   note = {R package version 0.0.0.9000,     https://wanglabcsu.github.io/regverse/},   url = {https://github.com/WangLabCSU/regverse}, }"},{"path":"https://wanglabcsu.github.io/regverse/index.html","id":"regverse","dir":"","previous_headings":"","what":"Streamlined Data Modeling and Visualization in Biomedical Regression Analysis","title":"Streamlined Data Modeling and Visualization in Biomedical Regression Analysis","text":"goal regverse provides R6 classes, methods utilities construct, analyze, summarize, visualize regression models (CoxPH GLMs).","code":""},{"path":"https://wanglabcsu.github.io/regverse/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Streamlined Data Modeling and Visualization in Biomedical Regression Analysis","text":"Install r-universe: Install GitHub:","code":"install.packages(\"regverse\", repos = c(\"https://wanglabcsu.r-universe.dev\", \"https://cloud.r-project.org\")) remotes::install_github(\"WangLabCSU/regverse\")"},{"path":"https://wanglabcsu.github.io/regverse/index.html","id":"simple-case","dir":"","previous_headings":"","what":"Simple case","title":"Streamlined Data Modeling and Visualization in Biomedical Regression Analysis","text":"basic example shows build visualize Cox model. Prepare data: Create model: can also create formula: Take look model result (package see required):  Visualize nice forest plot.","code":"library(regverse) library(survival)  lung <- survival::lung lung$sex <- factor(lung$sex) model <- REGModel$new(   lung,   recipe = list(     x = c(\"age\", \"sex\"),     y = c(\"time\", \"status\")   ) )  model #> <REGModel>    ==========  #>  #> Parameter | Coefficient |       SE |       95% CI |     z |     p #> ----------------------------------------------------------------- #> age       |        1.02 | 9.38e-03 | [1.00, 1.04] |  1.85 | 0.065 #> sex [2]   |        0.60 |     0.10 | [0.43, 0.83] | -3.06 | 0.002 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald z-distribution approximation. #> [coxph] model ========== model <- REGModel$new(   lung,   recipe = Surv(time, status) ~ age + sex )  model #> <REGModel>    ==========  #>  #> Parameter | Coefficient |       SE |       95% CI |     z |     p #> ----------------------------------------------------------------- #> age       |        1.02 | 9.38e-03 | [1.00, 1.04] |  1.85 | 0.065 #> sex [2]   |        0.60 |     0.10 | [0.43, 0.83] | -3.06 | 0.002 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald z-distribution approximation. #> [coxph] model ========== model$plot() model$get_forest_data() model$plot_forest()"},{"path":"https://wanglabcsu.github.io/regverse/index.html","id":"batch-processing-models","dir":"","previous_headings":"","what":"Batch processing models","title":"Streamlined Data Modeling and Visualization in Biomedical Regression Analysis","text":"building list regression model, unlike , lazy building approach used, .e., $build() must manually typed creating REGModelList object. (also means can check modify setting building necessary)","code":"ml <- REGModelList$new(   data = mtcars,   y = \"mpg\",   x = c(\"factor(cyl)\", colnames(mtcars)[3:5]),   covars = c(colnames(mtcars)[8:9], \"factor(gear)\") ) ml #> <REGModelList>    ==========  #>  #> X(s): factor(cyl), disp, hp, drat  #> Y(s): mpg  #> covars: vs, am, factor(gear)  #>  #> Not build yet, run $build() method  #> [] model ========== ml$build(f = \"gaussian\") str(ml$result) #> Classes 'data.table' and 'data.frame':   25 obs. of  10 variables: #>  $ focal_term: chr  \"factor(cyl)\" \"factor(cyl)\" \"factor(cyl)\" \"factor(cyl)\" ... #>  $ variable  : chr  \"(Intercept)\" \"factor(cyl)6\" \"factor(cyl)8\" \"vs\" ... #>  $ estimate  : num  23.28 -5.34 -8.5 1.68 4.31 ... #>  $ SE        : num  3.1 1.89 3.05 2.35 2.16 ... #>  $ CI        : num  0.95 0.95 0.95 0.95 0.95 0.95 0.95 0.95 0.95 0.95 ... #>  $ CI_low    : num  17.203 -9.04 -14.473 -2.931 0.084 ... #>  $ CI_high   : num  29.37 -1.64 -2.53 6.3 8.54 ... #>  $ t         : num  7.504 -2.829 -2.791 0.715 1.999 ... #>  $ df_error  : int  25 25 25 25 25 25 25 26 26 26 ... #>  $ p         : num  6.18e-14 4.67e-03 5.25e-03 4.75e-01 4.56e-02 ... #>  - attr(*, \".internal.selfref\")=<externalptr> str(ml$forest_data) #> Classes 'data.table' and 'data.frame':   6 obs. of  17 variables: #>  $ focal_term: chr  \"factor(cyl)\" \"factor(cyl)\" \"factor(cyl)\" \"disp\" ... #>  $ variable  : chr  \"factor(cyl)\" NA NA \"disp\" ... #>  $ term      : chr  \"factor(cyl)4\" \"factor(cyl)6\" \"factor(cyl)8\" \"disp\" ... #>  $ term_label: chr  \"factor(cyl)\" \"factor(cyl)\" \"factor(cyl)\" \"disp\" ... #>  $ class     : chr  \"factor\" \"factor\" \"factor\" \"numeric\" ... #>  $ level     : chr  \"4\" \"6\" \"8\" NA ... #>  $ level_no  : int  1 2 3 NA NA NA #>  $ n         : int  11 7 14 32 32 32 #>  $ estimate  : num  0 -5.3404 -8.5026 -0.0282 -0.0515 ... #>  $ SE        : num  NA 1.88767 3.04626 0.00924 0.01201 ... #>  $ CI        : num  NA 0.95 0.95 0.95 0.95 0.95 #>  $ CI_low    : num  NA -9.0402 -14.4732 -0.0463 -0.075 ... #>  $ CI_high   : num  NA -1.6407 -2.532 -0.0101 -0.0279 ... #>  $ t         : num  NA -2.83 -2.79 -3.05 -4.28 ... #>  $ df_error  : int  NA 25 25 26 26 26 #>  $ p         : num  NA 4.67e-03 5.25e-03 2.27e-03 1.84e-05 ... #>  $ reference : logi  TRUE FALSE FALSE FALSE FALSE FALSE #>  - attr(*, \".internal.selfref\")=<externalptr>  ml$plot_forest(ref_line = 0, xlim = c(-15, 8))"},{"path":"https://wanglabcsu.github.io/regverse/index.html","id":"coverage","dir":"","previous_headings":"","what":"Coverage","title":"Streamlined Data Modeling and Visualization in Biomedical Regression Analysis","text":"","code":"covr::package_coverage() #> regverse Coverage: 76.13% #> R/geom_segment_straight.R: 35.90% #> R/utils.R: 56.25% #> R/REGModelList.R: 67.42% #> R/REGModel.R: 87.06% #> R/polar.R: 100.00%"},{"path":"https://wanglabcsu.github.io/regverse/index.html","id":"license","dir":"","previous_headings":"","what":"LICENSE","title":"Streamlined Data Modeling and Visualization in Biomedical Regression Analysis","text":"(Apache License) Copyright (c) 2025 Shixiang Wang & WangLabCSU team","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class representing a regression model — REGModel","title":"R6 class representing a regression model — REGModel","text":"Contains fields storing data methods build, process visualize regression model. Currently, class designed CoxPH (survival::coxph()) GLM (stats::glm()) regression models.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class representing a regression model — REGModel","text":"data data.table storing modeling data. recipe R formula storing model formula. terms Variables modeling. args arguments used building model. model constructed model. type Model type (class). result Model result, object parameters_model. Can converted data.frame .data.frame() data.table::.data.table(). forest_data detailed data used plotting forest.","code":""},{"path":[]},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class representing a regression model — REGModel","text":"REGModel$new() REGModel$get_forest_data() REGModel$plot_forest() REGModel$plot() REGModel$print() REGModel$clone()","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class representing a regression model — REGModel","text":"Build REGModel object.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$new(   data,   recipe,   ...,   f = c(\"coxph\", \"binomial\", \"gaussian\", \"Gamma\", \"inverse.gaussian\", \"poisson\", \"quasi\",     \"quasibinomial\", \"quasipoisson\"),   exp = NULL,   ci = 0.95 )"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a regression model — REGModel","text":"data data.table storing modeling data. recipe R formula list two elements 'x' 'y', 'x' independent variables 'y' dependent variable. See examples detail operation. ... parameters passing corresponding regression model function. f length-1 string specifying modeling function family glm(), default 'coxph'. options members GLM family, see stats::family(). 'binomial' logistic regression, 'gaussian' linear regression. exp Logical, indicating whether exponentiate coefficients. ci Confidence Interval (CI) level. Default 0.95 (95%). e.g. survival::coxph().","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class representing a regression model — REGModel","text":"REGModel R6 object.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"method-get-forest-data-","dir":"Reference","previous_headings":"","what":"Method get_forest_data()","title":"R6 class representing a regression model — REGModel","text":"Get tidy data plotting forest.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$get_forest_data(separate_factor = FALSE, global_p = FALSE)"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a regression model — REGModel","text":"separate_factor Separate factor/class blank row. global_p TRUE, return global p value.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"method-plot-forest-","dir":"Reference","previous_headings":"","what":"Method plot_forest()","title":"R6 class representing a regression model — REGModel","text":"Plot forest.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$plot_forest(ref_line = NULL, xlim = NULL, ...)"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a regression model — REGModel","text":"ref_line Reference line, default 1 HR. xlim Limits x axis. ... plot options passing forestploter::forest(). Also check https://github.com/adayim/forestploter see complex adjustment result plot.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"R6 class representing a regression model — REGModel","text":"Print REGModel$result default plot methods see package.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$plot(...)"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a regression model — REGModel","text":"... parameters passing plot() see:::plot.see_parameters_model function.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 class representing a regression model — REGModel","text":"Print REGModel object","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$print(...)"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a regression model — REGModel","text":"... Unused.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class representing a regression model — REGModel","text":"objects class cloneable method.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$clone(deep = FALSE)"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a regression model — REGModel","text":"deep Whether make deep clone.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class representing a regression model — REGModel","text":"","code":"library(survival) test1 <- data.frame(   time = c(4, 3, 1, 1, 2, 2, 3),   status = c(1, 1, 1, 0, 1, 1, 0),   x = c(0, 2, 1, 1, 1, 0, 0),   sex = c(0, 0, 0, 0, 1, 1, 1) ) test1$sex <- factor(test1$sex)  # -------------- # Build a model # --------------  # way 1: mm <- REGModel$new(   test1,   Surv(time, status) ~ x + strata(sex) ) mm #> <REGModel>    ==========  #>  #> Parameter | Coefficient |   SE |        95% CI |    z |     p #> ------------------------------------------------------------- #> x         |        2.23 | 1.83 | [0.45, 11.18] | 0.98 | 0.329 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald z-distribution approximation. #> [coxph] model ========== as.data.frame(mm$result) #>   Parameter Coefficient      SE   CI    CI_low  CI_high         z df_error #> 1         x    2.230706 1.83448 0.95 0.4450758 11.18022 0.9756088      Inf #>           p #> 1 0.3292583 if (require(\"see\")) mm$plot() #> Loading required package: see  mm$print() # Same as print(mm) #> <REGModel>    ==========  #>  #> Parameter | Coefficient |   SE |        95% CI |    z |     p #> ------------------------------------------------------------- #> x         |        2.23 | 1.83 | [0.45, 11.18] | 0.98 | 0.329 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald z-distribution approximation. #> [coxph] model ==========  # way 2: mm2 <- REGModel$new(   test1,   recipe = list(     x = c(\"x\", \"strata(sex)\"),     y = c(\"time\", \"status\")   ) ) mm2 #> <REGModel>    ==========  #>  #> Parameter | Coefficient |   SE |        95% CI |    z |     p #> ------------------------------------------------------------- #> x         |        2.23 | 1.83 | [0.45, 11.18] | 0.98 | 0.329 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald z-distribution approximation. #> [coxph] model ==========  # Add other parameters, e.g., weights # For more, see ?coxph mm3 <- REGModel$new(   test1,   recipe = list(     x = c(\"x\", \"strata(sex)\"),     y = c(\"time\", \"status\")   ),   weights = c(1, 1, 1, 2, 2, 2, 3) ) mm3$args #> $weights #> [1] 1 1 1 2 2 2 3 #>   # ---------------------- # Another type of model # ---------------------- library(stats) counts <- c(18, 17, 15, 20, 10, 20, 25, 13, 12) outcome <- gl(3, 1, 9) treatment <- gl(3, 3) data <- data.frame(treatment, outcome, counts)  mm4 <- REGModel$new(   data,   counts ~ outcome + treatment,   f = \"poisson\" ) mm4 #> <REGModel>    ==========  #>  #> Parameter     | Log-Mean |   SE |         95% CI |        z |      p #> -------------------------------------------------------------------- #> (Intercept)   |     3.04 | 0.17 | [ 2.70,  3.37] |    17.81 | < .001 #> outcome [2]   |    -0.45 | 0.20 | [-0.86, -0.06] |    -2.25 | 0.025  #> outcome [3]   |    -0.29 | 0.19 | [-0.68,  0.08] |    -1.52 | 0.128  #> treatment [2] | 1.01e-15 | 0.20 | [-0.39,  0.39] | 5.06e-15 | > .999 #> treatment [3] | 7.11e-16 | 0.20 | [-0.39,  0.39] | 3.55e-15 | > .999 #>  #> Uncertainty intervals (profile-likelihood) and p-values (two-tailed) #>   computed using a Wald z-distribution approximation. #>  #> The model has a log- or logit-link. Consider using `exponentiate = #>   TRUE` to interpret coefficients as ratios. #> [glm/lm] model ========== mm4$plot_forest() #> Never call '$get_forest_data()' before, run with default options to get plotting data  mm4$get_forest_data() mm4$plot_forest()"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class representing a list of regression model — REGModelList","title":"R6 class representing a list of regression model — REGModelList","text":"Contains fields storing data methods build, process visualize list regression model (REGModel).","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class representing a list of regression model — REGModelList","text":"data data.table storing modeling data. x Focal variables (terms). y Predicted variables expression. covars Covariables. group split variable. mlist list REGModel. args arguments used building model. type Model type (class). result Model result, object parameters_model. Can converted data.frame .data.frame() data.table::.data.table(). forest_data detailed data used plotting forest.","code":""},{"path":[]},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class representing a list of regression model — REGModelList","text":"REGModelList$new() REGModelList$build() REGModelList$plot_forest() REGModelList$plot_connected_risk() REGModelList$print() REGModelList$clone()","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class representing a list of regression model — REGModelList","text":"Create REGModelList object.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"REGModelList$new(data, y, x, covars = NULL, group = NULL)"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a list of regression model — REGModelList","text":"data data.table storing modeling data. y Predicted variables expression. x Focal variables (terms). covars Covariables. group split variable.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class representing a list of regression model — REGModelList","text":"REGModelList R6 object.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"method-build-","dir":"Reference","previous_headings":"","what":"Method build()","title":"R6 class representing a list of regression model — REGModelList","text":"Build REGModelList object.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"REGModelList$build(   f = c(\"coxph\", \"binomial\", \"gaussian\", \"Gamma\", \"inverse.gaussian\", \"poisson\", \"quasi\",     \"quasibinomial\", \"quasipoisson\"),   exp = NULL,   ci = 0.95,   parallel = FALSE,   ... )"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a list of regression model — REGModelList","text":"f length-1 string specifying modeling function family glm(), default 'coxph'. options members GLM family, see stats::family(). 'binomial' logistic, 'gaussian' linear. exp Logical, indicating whether exponentiate coefficients. ci Confidence Interval (CI) level. Default 0.95 (95%). e.g. survival::coxph(). parallel TRUE, use N-1 cores run task. ... parameters passing corresponding regression model function.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class representing a list of regression model — REGModelList","text":"REGModel R6 object.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"method-plot-forest-","dir":"Reference","previous_headings":"","what":"Method plot_forest()","title":"R6 class representing a list of regression model — REGModelList","text":"Plot forest.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"REGModelList$plot_forest(   ref_line = NULL,   xlim = NULL,   vars = NULL,   p = NULL,   ... )"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a list of regression model — REGModelList","text":"ref_line Reference line, default 1 HR. xlim Limits x axis. vars Selected variables show. p Selected variables level' p value lower p. ... plot options passing forestploter::forest(). Also check https://github.com/adayim/forestploter see complex adjustment result plot.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"method-plot-connected-risk-","dir":"Reference","previous_headings":"","what":"Method plot_connected_risk()","title":"R6 class representing a list of regression model — REGModelList","text":"Plot connected risk network Append scale_size() operation (.e.,scale_size(range = c(0.1, 4))) reset range line width","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"REGModelList$plot_connected_risk()"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 class representing a list of regression model — REGModelList","text":"Print REGModelList object","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"REGModelList$print(...)"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a list of regression model — REGModelList","text":"... Unused.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class representing a list of regression model — REGModelList","text":"objects class cloneable method.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"REGModelList$clone(deep = FALSE)"},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a list of regression model — REGModelList","text":"deep Whether make deep clone.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/REGModelList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"# GLM regression ml <- REGModelList$new(   data = mtcars,   y = \"mpg\",   x = c(\"factor(cyl)\", colnames(mtcars)[3:5]),   covars = c(colnames(mtcars)[8:9], \"factor(gear)\") ) ml #> <REGModelList>    ==========  #>  #> X(s): factor(cyl), disp, hp, drat  #> Y(s): mpg  #> covars: vs, am, factor(gear)  #>  #> Not build yet, run $build() method  #> [] model ========== ml$print() #> <REGModelList>    ==========  #>  #> X(s): factor(cyl), disp, hp, drat  #> Y(s): mpg  #> covars: vs, am, factor(gear)  #>  #> Not build yet, run $build() method  #> [] model ========== ml$plot_forest() #> Please run $build() before $plot_forest() #> NULL  ml$build(f = \"gaussian\") if (FALSE) { # \\dontrun{ ml$build(f = \"gaussian\", parallel = TRUE) } # } ml$print() #> <REGModelList>    ==========  #>  #> X(s): factor(cyl), disp, hp, drat  #> Y(s): mpg  #> covars: vs, am, factor(gear)  #> ---- #>  Result:  #>      focal_term      variable    estimate          SE    CI       CI_low #>          <char>        <char>       <num>       <num> <num>        <num> #>  1: factor(cyl)   (Intercept) 23.28425686 3.102848398  0.95  17.20278575 #>  2: factor(cyl)  factor(cyl)6 -5.34044537 1.887666208  0.95  -9.04020315 #>  3: factor(cyl)  factor(cyl)8 -8.50258933 3.046261922  0.95 -14.47315299 #>  4: factor(cyl)            vs  1.68270326 2.353962963  0.95  -2.93097937 #>  5: factor(cyl)            am  4.31056447 2.156460225  0.95   0.08398010 #>  6: factor(cyl) factor(gear)4 -1.24673744 2.264460155  0.95  -5.68499779 #>  7: factor(cyl) factor(gear)5 -2.08223718 2.637768301  0.95  -7.25216805 #>  8:        disp   (Intercept) 24.65009765 3.360529174  0.95  18.06358150 #>  9:        disp          disp -0.02821806 0.009243695  0.95  -0.04633537 #> 10:        disp            vs  3.32060607 1.856416709  0.95  -0.31790382 #> 11:        disp            am  4.67281942 2.094171633  0.95   0.56831844 #> 12:        disp factor(gear)4 -2.52785760 2.211888366  0.95  -6.86307914 #> 13:        disp factor(gear)5 -2.89344598 2.574494892  0.95  -7.93936325 #> 14:          hp   (Intercept) 24.56544525 2.420389406  0.95  19.82156919 #> 15:          hp            hp -0.05145024 0.012010845  0.95  -0.07499106 #> 16:          hp            vs  3.01661776 1.574374865  0.95  -0.06910027 #> 17:          hp            am  5.11093165 1.798753134  0.95   1.58544029 #> 18:          hp factor(gear)4 -1.34845141 1.896221483  0.95  -5.06497722 #> 19:          hp factor(gear)5  1.16396634 2.363608073  0.95  -3.46862036 #> 20:        drat   (Intercept)  5.36259687 7.058661715  0.95  -8.47212587 #> 21:        drat          drat  3.01056864 2.245957350  0.95  -1.39142687 #> 22:        drat            vs  6.56480882 1.648702814  0.95   3.33341068 #> 23:        drat            am  6.04958546 2.304973039  0.95   1.53192132 #> 24:        drat factor(gear)4 -2.50572707 2.796115713  0.95  -7.98601316 #> 25:        drat factor(gear)5 -3.13453090 3.068393855  0.95  -9.14847234 #>      focal_term      variable    estimate          SE    CI       CI_low #>         CI_high          t df_error            p #>           <num>      <num>    <int>        <num> #>  1: 29.36572797  7.5041555       25 6.182588e-14 #>  2: -1.64068758 -2.8291259       25 4.667533e-03 #>  3: -2.53202568 -2.7911550       25 5.252031e-03 #>  4:  6.29638589  0.7148385       25 4.747089e-01 #>  5:  8.53714885  1.9989075       25 4.561837e-02 #>  6:  3.19152291 -0.5505672       25 5.819304e-01 #>  7:  3.08769369 -0.7893935       25 4.298820e-01 #>  8: 31.23661380  7.3351834       26 2.214181e-13 #>  9: -0.01010075 -3.0526817       26 2.268064e-03 #> 10:  6.95911596  1.7887180       26 7.366023e-02 #> 11:  8.77732040  2.2313450       26 2.565828e-02 #> 12:  1.80736393 -1.1428504       26 2.531007e-01 #> 13:  2.15247129 -1.1238888       26 2.610602e-01 #> 14: 29.30932132 10.1493773       26 3.334845e-24 #> 15: -0.02790942 -4.2836487       26 1.838531e-05 #> 16:  6.10233579  1.9160734       26 5.535576e-02 #> 17:  8.63642301  2.8413747       26 4.491950e-03 #> 18:  2.36807440 -0.7111255       26 4.770065e-01 #> 19:  5.79655303  0.4924532       26 6.223990e-01 #> 20: 19.19731961  0.7597186       26 4.474228e-01 #> 21:  7.41256416  1.3404389       26 1.801027e-01 #> 22:  9.79620695  3.9818024       26 6.839463e-05 #> 23: 10.56724960  2.6245797       26 8.675598e-03 #> 24:  2.97455903 -0.8961457       26 3.701750e-01 #> 25:  2.87941055 -1.0215543       26 3.069919e-01 #>         CI_high          t df_error            p #> [glm/lm] model ========== ml$result #>      focal_term      variable    estimate          SE    CI       CI_low #>          <char>        <char>       <num>       <num> <num>        <num> #>  1: factor(cyl)   (Intercept) 23.28425686 3.102848398  0.95  17.20278575 #>  2: factor(cyl)  factor(cyl)6 -5.34044537 1.887666208  0.95  -9.04020315 #>  3: factor(cyl)  factor(cyl)8 -8.50258933 3.046261922  0.95 -14.47315299 #>  4: factor(cyl)            vs  1.68270326 2.353962963  0.95  -2.93097937 #>  5: factor(cyl)            am  4.31056447 2.156460225  0.95   0.08398010 #>  6: factor(cyl) factor(gear)4 -1.24673744 2.264460155  0.95  -5.68499779 #>  7: factor(cyl) factor(gear)5 -2.08223718 2.637768301  0.95  -7.25216805 #>  8:        disp   (Intercept) 24.65009765 3.360529174  0.95  18.06358150 #>  9:        disp          disp -0.02821806 0.009243695  0.95  -0.04633537 #> 10:        disp            vs  3.32060607 1.856416709  0.95  -0.31790382 #> 11:        disp            am  4.67281942 2.094171633  0.95   0.56831844 #> 12:        disp factor(gear)4 -2.52785760 2.211888366  0.95  -6.86307914 #> 13:        disp factor(gear)5 -2.89344598 2.574494892  0.95  -7.93936325 #> 14:          hp   (Intercept) 24.56544525 2.420389406  0.95  19.82156919 #> 15:          hp            hp -0.05145024 0.012010845  0.95  -0.07499106 #> 16:          hp            vs  3.01661776 1.574374865  0.95  -0.06910027 #> 17:          hp            am  5.11093165 1.798753134  0.95   1.58544029 #> 18:          hp factor(gear)4 -1.34845141 1.896221483  0.95  -5.06497722 #> 19:          hp factor(gear)5  1.16396634 2.363608073  0.95  -3.46862036 #> 20:        drat   (Intercept)  5.36259687 7.058661715  0.95  -8.47212587 #> 21:        drat          drat  3.01056864 2.245957350  0.95  -1.39142687 #> 22:        drat            vs  6.56480882 1.648702814  0.95   3.33341068 #> 23:        drat            am  6.04958546 2.304973039  0.95   1.53192132 #> 24:        drat factor(gear)4 -2.50572707 2.796115713  0.95  -7.98601316 #> 25:        drat factor(gear)5 -3.13453090 3.068393855  0.95  -9.14847234 #>      focal_term      variable    estimate          SE    CI       CI_low #>         CI_high          t df_error            p #>           <num>      <num>    <int>        <num> #>  1: 29.36572797  7.5041555       25 6.182588e-14 #>  2: -1.64068758 -2.8291259       25 4.667533e-03 #>  3: -2.53202568 -2.7911550       25 5.252031e-03 #>  4:  6.29638589  0.7148385       25 4.747089e-01 #>  5:  8.53714885  1.9989075       25 4.561837e-02 #>  6:  3.19152291 -0.5505672       25 5.819304e-01 #>  7:  3.08769369 -0.7893935       25 4.298820e-01 #>  8: 31.23661380  7.3351834       26 2.214181e-13 #>  9: -0.01010075 -3.0526817       26 2.268064e-03 #> 10:  6.95911596  1.7887180       26 7.366023e-02 #> 11:  8.77732040  2.2313450       26 2.565828e-02 #> 12:  1.80736393 -1.1428504       26 2.531007e-01 #> 13:  2.15247129 -1.1238888       26 2.610602e-01 #> 14: 29.30932132 10.1493773       26 3.334845e-24 #> 15: -0.02790942 -4.2836487       26 1.838531e-05 #> 16:  6.10233579  1.9160734       26 5.535576e-02 #> 17:  8.63642301  2.8413747       26 4.491950e-03 #> 18:  2.36807440 -0.7111255       26 4.770065e-01 #> 19:  5.79655303  0.4924532       26 6.223990e-01 #> 20: 19.19731961  0.7597186       26 4.474228e-01 #> 21:  7.41256416  1.3404389       26 1.801027e-01 #> 22:  9.79620695  3.9818024       26 6.839463e-05 #> 23: 10.56724960  2.6245797       26 8.675598e-03 #> 24:  2.97455903 -0.8961457       26 3.701750e-01 #> 25:  2.87941055 -1.0215543       26 3.069919e-01 #>         CI_high          t df_error            p ml$forest_data #>     focal_term    variable         term  term_label   class  level level_no #>         <char>      <char>       <char>      <char>  <char> <char>    <int> #> 1: factor(cyl) factor(cyl) factor(cyl)4 factor(cyl)  factor      4        1 #> 2: factor(cyl)        <NA> factor(cyl)6 factor(cyl)  factor      6        2 #> 3: factor(cyl)        <NA> factor(cyl)8 factor(cyl)  factor      8        3 #> 4:        disp        disp         disp        disp numeric   <NA>       NA #> 5:          hp          hp           hp          hp numeric   <NA>       NA #> 6:        drat        drat         drat        drat numeric   <NA>       NA #>        n    estimate          SE    CI       CI_low     CI_high         t #>    <int>       <num>       <num> <num>        <num>       <num>     <num> #> 1:    11  0.00000000          NA    NA           NA          NA        NA #> 2:     7 -5.34044537 1.887666208  0.95  -9.04020315 -1.64068758 -2.829126 #> 3:    14 -8.50258933 3.046261922  0.95 -14.47315299 -2.53202568 -2.791155 #> 4:    32 -0.02821806 0.009243695  0.95  -0.04633537 -0.01010075 -3.052682 #> 5:    32 -0.05145024 0.012010845  0.95  -0.07499106 -0.02790942 -4.283649 #> 6:    32  3.01056864 2.245957350  0.95  -1.39142687  7.41256416  1.340439 #>    df_error            p reference #>       <int>        <num>    <lgcl> #> 1:       NA           NA      TRUE #> 2:       25 4.667533e-03     FALSE #> 3:       25 5.252031e-03     FALSE #> 4:       26 2.268064e-03     FALSE #> 5:       26 1.838531e-05     FALSE #> 6:       26 1.801027e-01     FALSE ml$plot_forest()   lung <- survival::lung # Cox-PH regression ml2 <- REGModelList$new(   data = lung,   y = c(\"time\", \"status\"),   x = c(\"age\", \"ph.ecog\", \"ph.karno\"),   covars = c(\"factor(sex)\") ) ml2$build() ml2$plot_forest()   # Group Cox analysis lung$ph.ecog <- factor(lung$ph.ecog) ml3 <- REGModelList$new(   data = lung,   y = c(\"time\", \"status\"),   x = c(\"ph.ecog\"),   covars = \"age\", group = \"sex\" ) ml3$build() #> group model data by \"sex\" #> Model matrix is rank deficient. Parameters `ph.ecog3` were not #>   estimable."},{"path":"https://wanglabcsu.github.io/regverse/reference/polar_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connects dots — polar_connect","title":"Connects dots — polar_connect","text":"Check polar_init() examples.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/polar_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connects dots — polar_connect","text":"","code":"polar_connect(data, x1, x2, ...)"},{"path":"https://wanglabcsu.github.io/regverse/reference/polar_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connects dots — polar_connect","text":"data data.frame contains connections events. x1, x2 column names (without quote) storing connected events. ... parameters passing ggplot2::geom_segment, expect c(x, xend, y, yend) 4 mapping parameters.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/polar_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connects dots — polar_connect","text":"ggplot object.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/polar_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Init a dot plot in polar system — polar_init","title":"Init a dot plot in polar system — polar_init","text":"Init dot plot polar system","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/polar_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Init a dot plot in polar system — polar_init","text":"","code":"polar_init(data, x, ...)"},{"path":"https://wanglabcsu.github.io/regverse/reference/polar_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Init a dot plot in polar system — polar_init","text":"data data.frame contains events, e.g., genes. x column name (without quote) storing event list. ... parameters passing ggplot2::geom_point.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/polar_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Init a dot plot in polar system — polar_init","text":"ggplot object.","code":""},{"path":"https://wanglabcsu.github.io/regverse/reference/polar_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Init a dot plot in polar system — polar_init","text":"","code":"library(ggplot2) # ------------------- #  Init a polar plot # -------------------  data <- data.frame(x = LETTERS[1:7])  p1 <- polar_init(data, x = x) p1   # Set aes value p2 <- polar_init(data, x = x, size = 3, color = \"red\", alpha = 0.5) p2   # Set aes mapping set.seed(123L) data1 <- data.frame(   x = LETTERS[1:7],   shape = c(\"r\", \"r\", \"r\", \"b\", \"b\", \"b\", \"b\"),   color = c(\"r\", \"r\", \"r\", \"b\", \"b\", \"b\", \"b\"),   size = abs(rnorm(7)) ) # Check https://ggplot2.tidyverse.org/reference/geom_point.html # for how to use both stroke and color p3 <- polar_init(data1, x = x, aes(size = size, color = color, shape = shape), alpha = 0.5) p3   # -------------------- #  Connect polar dots # -------------------- data2 <- data.frame(   x1 = LETTERS[1:7],   x2 = c(\"B\", \"C\", \"D\", \"E\", \"C\", \"A\", \"C\"),   color = c(\"r\", \"r\", \"r\", \"b\", \"b\", \"b\", \"b\") ) p4 <- p3 + polar_connect(data2, x1, x2) p4   # Unlike polar_init, mappings don't need to be included in aes() p5 <- p3 + polar_connect(data2, x1, x2, color = color, alpha = 0.8, linetype = 2) p5   # Use two different color scales if (requireNamespace(\"ggnewscale\")) {   library(ggnewscale)   p6 <- p3 +     new_scale(\"color\") +     polar_connect(data2, x1, x2, color = color, alpha = 0.8, linetype = 2)   p6 + scale_color_brewer()   p6 + scale_color_manual(values = c(\"darkgreen\", \"magenta\")) }"},{"path":"https://wanglabcsu.github.io/regverse/reference/regverse-package.html","id":null,"dir":"Reference","previous_headings":"","what":"regverse: Streamlined Data Modeling and Visualization in Biomedical Regression Analysis — regverse-package","title":"regverse: Streamlined Data Modeling and Visualization in Biomedical Regression Analysis — regverse-package","text":"Provides comprehensive suite tools enhance regression analysis interpretation field computational biology clinical medicine.","code":""},{"path":[]},{"path":"https://wanglabcsu.github.io/regverse/reference/regverse-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"regverse: Streamlined Data Modeling and Visualization in Biomedical Regression Analysis — regverse-package","text":"Maintainer: Shixiang Wang w_shixiang@163.com (ORCID)","code":""},{"path":"https://wanglabcsu.github.io/regverse/news/index.html","id":"regverse-0009000","dir":"Changelog","previous_headings":"","what":"regverse 0.0.0.9000","title":"regverse 0.0.0.9000","text":"new version regport, combining features ezcox polar.","code":""}]
